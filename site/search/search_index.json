{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting Started Pylumi is a Python API for the pulumi resource provider interface, which is written in Go. Note: Pylumi is not a client for all Pulumi functionality and has does not interact with the infrastructure as code application. What it does is just do enough Pulumi setup to interact with its resource providers like aws and gcp . For each provider, a number of resources are exposed with the following functionality: - Reading the state of the resource from a remote API. - CRUD operations on the resource--schemas for particular resources can be found via the Provider.get_schema() function. - Ability to diff different states of the resource to determine which changes are required to go from one bag of properties to another. Usage example: import pylumi with pylumi . Context () as ctx , \\ ctx . Provider ( 'aws' , { 'region' : 'us-east-1' }) as aws : resp = aws . create ( 'urn:pulumi:_::_::aws:s3/bucketObject:BucketObject::_' , { 'bucket' : 'some-bucket' , 'key' : 'some-key' , 'content' : 'Hello, world!' }, ) Installation TODO","title":"Getting Started"},{"location":"#getting-started","text":"Pylumi is a Python API for the pulumi resource provider interface, which is written in Go. Note: Pylumi is not a client for all Pulumi functionality and has does not interact with the infrastructure as code application. What it does is just do enough Pulumi setup to interact with its resource providers like aws and gcp . For each provider, a number of resources are exposed with the following functionality: - Reading the state of the resource from a remote API. - CRUD operations on the resource--schemas for particular resources can be found via the Provider.get_schema() function. - Ability to diff different states of the resource to determine which changes are required to go from one bag of properties to another. Usage example: import pylumi with pylumi . Context () as ctx , \\ ctx . Provider ( 'aws' , { 'region' : 'us-east-1' }) as aws : resp = aws . create ( 'urn:pulumi:_::_::aws:s3/bucketObject:BucketObject::_' , { 'bucket' : 'some-bucket' , 'key' : 'some-key' , 'content' : 'Hello, world!' }, )","title":"Getting Started"},{"location":"#installation","text":"TODO","title":"Installation"},{"location":"reference/","text":"Pylumi Reference This page contains all of the methods for the Provider and Context classes, the two interfaces exposed by pylumi to interact with Pulumi. Context Reference class pylumi. Context ( name=None , cwd=None ) A context is a Python representation of a statey plugin context, which manages resource plugins. Basically this acts as an orchestration server which exposes a gRPC server and proxies communications with the actual resource plugin processes (my understandning). Parameters: name - (optional) Assign a name to the context; this name is unique, so if two contexts are created with the same name then they will point to the same Provider object in the go runtime. cwd - (optional) Pass a current working directory to use for the context. Provider ( self , name , config=None ) Get a Provider object with the given name. This just creates the provider object, no interaction is done with the Pulumi engine until configure() if called (or the provider is used as a context manager). Parameters: name - The name of the provider, e.g. 'aws'. config - (optional) configuration parameters for the provider. Pulumi Docs: Provider loads a new copy of the provider for a given package. If a provider for this package could not be found, or an error occurs while creating it, a non-nil error is returned. Reference: Host.Provider list_plugins ( self ) List the currently loaded plugins in this context. Pulumi docs : ListPlugins lists all plugins that have been loaded, with version information. Reference: Host.ListPlugins setup ( self ) Set up this Pulumi context. This creates an interface in the Go runtime that can create and communicate with resource provider proce teardown ( self ) Tear down this provider, removing associated OS resources such as plugin processes. Provider Reference class pylumi. Provider ( ctx , name , config=None ) check ( self , urn , olds , news , allow_unknowns=False ) Validate the given resource configuration. Parameters urn - pulumi resource URN. olds - old bag of properties news - new bag of properties allow_unknowns - (optional) allow unknown values in the output, default False. Pulumi Docs: Check validates that the given property bag is valid for a resource of the given type and returns the inputs that should be passed to successive calls to Diff, Create, or Update for this resource. Reference: Provider.Check check_config ( self , urn , olds , news , allow_unknowns=False ) Validate the given provider configuration. Parameters urn - pulumi resource URN. olds - old bag of properties news - new bag of properties allow_unknowns - (optional) allow unknown values in the output, default False. Pulumi Docs: CheckConfig validates the configuration for this resource provider. Reference: Provider.CheckConfig configure ( self , inputs=None ) Configure this provider with the given configuration. Parameters: inputs - (optional) configure this provider with the given configuration instead of the one passed in the constructor. Pulumi Docs: Configure configures the resource provider with \"globals\" that control its behavior. Reference: Provider.Configure create ( self , urn , news , timeout=60 , preview=False ) Create a pulumi resource. Parameters urn - pulumi resource URN. id - pulumi resource ID. news - new bag of properties timeout - (optional) timeout for the operation, default 60 preview - (optional) predict the future state of the resource, default False. Pulumi Docs: Create allocates a new instance of the provided resource and returns its unique resource.ID. Reference: Provider.Create delete ( self , urn , id , news , timeout=60 ) Delete a pulumi resource. Parameters: urn - pulumi resource URN. id - pulumi resource ID. news - new bag of properties. timeout - timeout for the operation, default 60. Pulumi Docs: Delete tears down an existing resource. Reference: Provider.Delete diff ( self , urn , id , olds , news , allow_unknowns=False , ignore_changes=() ) Diff the given resource configurations. Parameters urn - pulumi resource URN. id - pulumi resource ID. olds - old bag of properties news - new bag of properties allow_unknowns - (optional) allow unknown values in the output, default False. Pulumi Docs: Diff checks what impacts a hypothetical update will have on the resource's properties. Reference: Provider.Diff diff_config ( self , urn , olds , news , allow_unknowns=False , ignore_changes=() ) Diff the given provider configurations. Parameters urn - pulumi resource URN. olds - old bag of properties news - new bag of properties allow_unknowns - (optional) allow unknown values in the output, default False. Pulumi Docs: DiffConfig checks what impacts a hypothetical change to this provider's configuration will have on the provider. Reference: Provider.DiffConfig get_schema ( self , version=0 ) Get the schema information about this provider. Parameters version - (optional) specify a schema version for the provider. Default is 0. Pulumi Docs: Reference: Provider.GetSchema read ( self , urn , id , inputs , state ) Read the state of a pulumi resource. Parameters: urn - pulumi resource URN. id - plumi resource ID. inputs - input properties state - properties from the current state of the resource Pulumi Docs: Read the current live state associated with a resource. Enough state must be include in the inputs to uniquely identify the resource; this is typically just the resource ID, but may also include some properties. If the resource is missing (for instance, because it has been deleted), the resulting property map will be nil. Reference: Provider.Read teardown ( self ) Tear down resources associated with this provider. update ( self , urn , id , olds , news , timeout=60 ) Update the state of a pulumi resource. Parameters: urn - pulumi resource URN. id - pulumi resource ID. olds - old bag of properties. news - new bag of properties. timeout - timeout for the operation, default 60. Pulumi Docs: Update updates an existing resource with new values. Reference: Provider.Update","title":"Pylumi Reference"},{"location":"reference/#pylumi-reference","text":"This page contains all of the methods for the Provider and Context classes, the two interfaces exposed by pylumi to interact with Pulumi.","title":"Pylumi Reference"},{"location":"reference/#context-reference","text":"class pylumi. Context ( name=None , cwd=None ) A context is a Python representation of a statey plugin context, which manages resource plugins. Basically this acts as an orchestration server which exposes a gRPC server and proxies communications with the actual resource plugin processes (my understandning). Parameters: name - (optional) Assign a name to the context; this name is unique, so if two contexts are created with the same name then they will point to the same Provider object in the go runtime. cwd - (optional) Pass a current working directory to use for the context. Provider ( self , name , config=None ) Get a Provider object with the given name. This just creates the provider object, no interaction is done with the Pulumi engine until configure() if called (or the provider is used as a context manager). Parameters: name - The name of the provider, e.g. 'aws'. config - (optional) configuration parameters for the provider. Pulumi Docs: Provider loads a new copy of the provider for a given package. If a provider for this package could not be found, or an error occurs while creating it, a non-nil error is returned. Reference: Host.Provider list_plugins ( self ) List the currently loaded plugins in this context. Pulumi docs : ListPlugins lists all plugins that have been loaded, with version information. Reference: Host.ListPlugins setup ( self ) Set up this Pulumi context. This creates an interface in the Go runtime that can create and communicate with resource provider proce teardown ( self ) Tear down this provider, removing associated OS resources such as plugin processes.","title":"Context Reference"},{"location":"reference/#provider-reference","text":"class pylumi. Provider ( ctx , name , config=None ) check ( self , urn , olds , news , allow_unknowns=False ) Validate the given resource configuration. Parameters urn - pulumi resource URN. olds - old bag of properties news - new bag of properties allow_unknowns - (optional) allow unknown values in the output, default False. Pulumi Docs: Check validates that the given property bag is valid for a resource of the given type and returns the inputs that should be passed to successive calls to Diff, Create, or Update for this resource. Reference: Provider.Check check_config ( self , urn , olds , news , allow_unknowns=False ) Validate the given provider configuration. Parameters urn - pulumi resource URN. olds - old bag of properties news - new bag of properties allow_unknowns - (optional) allow unknown values in the output, default False. Pulumi Docs: CheckConfig validates the configuration for this resource provider. Reference: Provider.CheckConfig configure ( self , inputs=None ) Configure this provider with the given configuration. Parameters: inputs - (optional) configure this provider with the given configuration instead of the one passed in the constructor. Pulumi Docs: Configure configures the resource provider with \"globals\" that control its behavior. Reference: Provider.Configure create ( self , urn , news , timeout=60 , preview=False ) Create a pulumi resource. Parameters urn - pulumi resource URN. id - pulumi resource ID. news - new bag of properties timeout - (optional) timeout for the operation, default 60 preview - (optional) predict the future state of the resource, default False. Pulumi Docs: Create allocates a new instance of the provided resource and returns its unique resource.ID. Reference: Provider.Create delete ( self , urn , id , news , timeout=60 ) Delete a pulumi resource. Parameters: urn - pulumi resource URN. id - pulumi resource ID. news - new bag of properties. timeout - timeout for the operation, default 60. Pulumi Docs: Delete tears down an existing resource. Reference: Provider.Delete diff ( self , urn , id , olds , news , allow_unknowns=False , ignore_changes=() ) Diff the given resource configurations. Parameters urn - pulumi resource URN. id - pulumi resource ID. olds - old bag of properties news - new bag of properties allow_unknowns - (optional) allow unknown values in the output, default False. Pulumi Docs: Diff checks what impacts a hypothetical update will have on the resource's properties. Reference: Provider.Diff diff_config ( self , urn , olds , news , allow_unknowns=False , ignore_changes=() ) Diff the given provider configurations. Parameters urn - pulumi resource URN. olds - old bag of properties news - new bag of properties allow_unknowns - (optional) allow unknown values in the output, default False. Pulumi Docs: DiffConfig checks what impacts a hypothetical change to this provider's configuration will have on the provider. Reference: Provider.DiffConfig get_schema ( self , version=0 ) Get the schema information about this provider. Parameters version - (optional) specify a schema version for the provider. Default is 0. Pulumi Docs: Reference: Provider.GetSchema read ( self , urn , id , inputs , state ) Read the state of a pulumi resource. Parameters: urn - pulumi resource URN. id - plumi resource ID. inputs - input properties state - properties from the current state of the resource Pulumi Docs: Read the current live state associated with a resource. Enough state must be include in the inputs to uniquely identify the resource; this is typically just the resource ID, but may also include some properties. If the resource is missing (for instance, because it has been deleted), the resulting property map will be nil. Reference: Provider.Read teardown ( self ) Tear down resources associated with this provider. update ( self , urn , id , olds , news , timeout=60 ) Update the state of a pulumi resource. Parameters: urn - pulumi resource URN. id - pulumi resource ID. olds - old bag of properties. news - new bag of properties. timeout - timeout for the operation, default 60. Pulumi Docs: Update updates an existing resource with new values. Reference: Provider.Update","title":"Provider Reference"}]}